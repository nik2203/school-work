{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\Sem-3\\\\web tech\\\\online-library\\\\online-library\\\\src\\\\components\\\\pages\\\\signuppage\\\\signup.jsx\";\nimport React, { useState } from \"react\";\nimport \"./signup.css\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  /*\r\n      const navigate = useNavigate();\r\n      const navigateToDash = () => {\r\n          navigate(\"/dash\");\r\n      };\r\n      const navigateToLogin = () => {\r\n          navigate(\"/login\");\r\n      };\r\n  \r\n      const checkPassword = (password, confirm) => {\r\n          if (password === confirm && password.length > 8) return 1;\r\n          else if (password === confirm && password.length < 8) return 2;\r\n          else if (password != confirm) return 3;\r\n      };\r\n  \r\n  \r\n      function submitHandler(e) {\r\n          e.preventDefault();\r\n         if (checkPassword(password, confirm) == 1) {\r\n              const user = {\r\n                  email: email,\r\n                  username: username,\r\n                  password: password,\r\n                  confirm_password: confirm,\r\n              };\r\n              axios.post(\"http://localhost:4000/register\", user)\r\n                  .then((res) => {\r\n                      if (res.data.message == \"Existing Account\") {\r\n                          alert(\"The email entered by you seems to already have an account!\\nTry Signing in!\")\r\n                          navigateToLogin()\r\n                      }\r\n                      else {\r\n                          navigateToDash()\r\n                      }\r\n                  });\r\n              console.log(user);\r\n          } else if (checkPassword(password, confirm) == 2)\r\n              alert(\"Password should be more than 8 letters\");\r\n          else if (checkPassword(password, confirm) == 3)\r\n              alert(\"Please enter the same password\");\r\n      }\r\n  \r\n      const [email, setEmail] = useState(\"\");\r\n      const [username, setUsername] = useState(\"\");\r\n      const [password, setPassword] = useState(\"\");\r\n      const [confirm, setConfirm] = useState(\"\");*/\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: username,\n          placeholder: \"Your Name\",\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Your Email\",\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Your Password\",\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmpassword\",\n          value: confirm,\n          placeholder: \"Re-enter Password\",\n          onChange: event => setConfirm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Register","username","event","setUsername","target","value","email","setEmail","password","setPassword","confirm","setConfirm"],"sources":["D:/Nikhil/Sem-3/web tech/online-library/online-library/src/components/pages/signuppage/signup.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./signup.css\"\r\nimport axios from \"axios\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Register = () => {\r\n/*\r\n    const navigate = useNavigate();\r\n    const navigateToDash = () => {\r\n        navigate(\"/dash\");\r\n    };\r\n    const navigateToLogin = () => {\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    const checkPassword = (password, confirm) => {\r\n        if (password === confirm && password.length > 8) return 1;\r\n        else if (password === confirm && password.length < 8) return 2;\r\n        else if (password != confirm) return 3;\r\n    };\r\n\r\n\r\n    function submitHandler(e) {\r\n        e.preventDefault();\r\n       if (checkPassword(password, confirm) == 1) {\r\n            const user = {\r\n                email: email,\r\n                username: username,\r\n                password: password,\r\n                confirm_password: confirm,\r\n            };\r\n            axios.post(\"http://localhost:4000/register\", user)\r\n                .then((res) => {\r\n                    if (res.data.message == \"Existing Account\") {\r\n                        alert(\"The email entered by you seems to already have an account!\\nTry Signing in!\")\r\n                        navigateToLogin()\r\n                    }\r\n                    else {\r\n                        navigateToDash()\r\n                    }\r\n                });\r\n            console.log(user);\r\n        } else if (checkPassword(password, confirm) == 2)\r\n            alert(\"Password should be more than 8 letters\");\r\n        else if (checkPassword(password, confirm) == 3)\r\n            alert(\"Please enter the same password\");\r\n    }\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");*/\r\n\r\n    return (\r\n        <center>\r\n            <div className=\"register\">\r\n                <h1>Register</h1>\r\n                <form>\r\n                    <input type=\"text\" name=\"name\" value={username} placeholder=\"Your Name\" onChange={(event) => setUsername(event.target.value)}></input>\r\n                    <input type=\"text\" name=\"email\" value={email} placeholder=\"Your Email\" onChange={(event) => setEmail(event.target.value)}></input>\r\n                    <input type=\"password\" name=\"password\" value={password} placeholder=\"Your Password\" onChange={(event) => setPassword(event.target.value)}></input>\r\n                    <input type=\"password\" name=\"confirmpassword\" value={confirm} placeholder=\"Re-enter Password\" onChange={(event) => setConfirm(event.target.value)}></input>\r\n                    <input type=\"submit\" className=\"button\">Register</input>\r\n                </form>\r\n                <div>or</div>\r\n                <div className=\"button\">Login</div>\r\n            </div>\r\n        </center>\r\n    )\r\n}\r\n\r\nexport default Register;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAA;AAE9C,MAAMC,QAAQ,GAAG,MAAM;EACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAA,wBACI;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAEC,QAAS;UAAC,WAAW,EAAC,WAAW;UAAC,QAAQ,EAAGC,KAAK,IAAKC,WAAW,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACtI;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,OAAO;UAAC,KAAK,EAAEC,KAAM;UAAC,WAAW,EAAC,YAAY;UAAC,QAAQ,EAAGJ,KAAK,IAAKK,QAAQ,CAACL,KAAK,CAACE,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAClI;UAAO,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,KAAK,EAAEG,QAAS;UAAC,WAAW,EAAC,eAAe;UAAC,QAAQ,EAAGN,KAAK,IAAKO,WAAW,CAACP,KAAK,CAACE,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAClJ;UAAO,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,iBAAiB;UAAC,KAAK,EAAEK,OAAQ;UAAC,WAAW,EAAC,mBAAmB;UAAC,QAAQ,EAAGR,KAAK,IAAKS,UAAU,CAACT,KAAK,CAACE,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAC3J;UAAO,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB;MAAA;QAAA;QAAA;QAAA;MAAA,QACrD,eACP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb;QAAK,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA;EACjC;IAAA;IAAA;IAAA;EAAA,QACD;AAEjB,CAAC;AAAA,KAhEKL,QAAQ;AAkEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}