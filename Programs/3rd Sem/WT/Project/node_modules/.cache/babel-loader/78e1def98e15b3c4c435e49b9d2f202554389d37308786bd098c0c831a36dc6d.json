{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\Sem-3\\\\web tech\\\\online-library\\\\online-library\\\\src\\\\components\\\\pages\\\\loginpage\\\\login.jsx\";\nimport React, { useState } from \"react\";\nimport \"./login.css\";\nimport axios from \"axios\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  /*\r\n      const navigate = useNavigate();\r\n      const navigateToDash = () => {\r\n          navigate(\"/dash\");\r\n      }\r\n      const handleSubmit = (e) => {\r\n          e.preventDefault()\r\n          axios.post(\"http://localhost:3000/login\", { username: username, password: password })\r\n              .then((res) => {\r\n                  if (res.data.message === \"True\")\r\n                      navigateToDash()\r\n                  else\r\n                      alert(\"Incorrect login credentials\")\r\n  \r\n              })\r\n      }\r\n      const [username, setUser] = useState(\"\");\r\n      const [password, setPassword] = useState(\"\");\r\n  */\n  return (\n    /*#__PURE__*/\n    /*<center>\r\n        <div className=\"login\">\r\n            <p>Login</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"username\" value={username} onChange={(event)=>setUser(event.target.value)} placeholder=\"Enter your Username\" required></input>\r\n                <input type=\"password\" name=\"password\" value={password} onChange={(event)=>setPassword(event.target.value)} placeholder=\"Enter your Password\"  required></input>\r\n                <input type=\"submit\" className=\"button\">Login</input>\r\n                <div>or</div>\r\n                <NavLink exact to=\"/register\" className=\"button\">Register</NavLink>\r\n            </form>\r\n        </div>\r\n    </center>*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Enter Your Username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), \"i\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","NavLink","useNavigate","Login"],"sources":["D:/Nikhil/Sem-3/web tech/online-library/online-library/src/components/pages/loginpage/login.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport \"./login.css\"\r\nimport axios from \"axios\"\r\nimport { NavLink, useNavigate } from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n/*\r\n    const navigate = useNavigate();\r\n    const navigateToDash = () => {\r\n        navigate(\"/dash\");\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:3000/login\", { username: username, password: password })\r\n            .then((res) => {\r\n                if (res.data.message === \"True\")\r\n                    navigateToDash()\r\n                else\r\n                    alert(\"Incorrect login credentials\")\r\n\r\n            })\r\n    }\r\n    const [username, setUser] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n*/\r\n    return (\r\n        /*<center>\r\n            <div className=\"login\">\r\n                <p>Login</p>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" name=\"username\" value={username} onChange={(event)=>setUser(event.target.value)} placeholder=\"Enter your Username\" required></input>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={(event)=>setPassword(event.target.value)} placeholder=\"Enter your Password\"  required></input>\r\n                    <input type=\"submit\" className=\"button\">Login</input>\r\n                    <div>or</div>\r\n                    <NavLink exact to=\"/register\" className=\"button\">Register</NavLink>\r\n                </form>\r\n            </div>\r\n        </center>*/\r\n        <div>\r\n            <center>\r\n                <div className=\"login\">\r\n                    <p>Login</p>\r\n                    <form>\r\n                        <input type=\"text\" name=\"username\" placeholder=\"Enter Your Username\" required></input>\r\n                        i\r\n                    </form>\r\n                </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,WAAW,QAAQ,kBAAkB;AAAA;AAEvD,MAAMC,KAAK,GAAG,MAAM;EACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;IAAA;IACI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ;MAAA,uBACI;QAAA,uBACI;UAAK,SAAS,EAAC,OAAO;UAAA,wBAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY,eACZ;YAAA,wBACI;cAAO,IAAI,EAAC,MAAM;cAAC,IAAI,EAAC,UAAU;cAAC,WAAW,EAAC,qBAAqB;cAAC,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QAEnF;QAAA;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACP;AAEd,CAAC;AAAA,KA7CKA,KAAK;AA+CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}